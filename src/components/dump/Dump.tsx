import React, { FunctionComponent } from "react"
import './dump.css'

export const Dump: FunctionComponent = () => {

    const decoder = new TextDecoder();
    const chars: string = `!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~ΓÇÿΓÇÖΓÇ£ΓÇ¥ΓÇôΓÇö┬ú┬ñ┬Ñ┬ª┬º┬¬┬½┬¼┬¡┬░┬▒┬▓┬│┬╡┬╢┬╣┬║┬╗┬╝┬╜┬╛├Ç├ü├é├â├ä├à├å├ê├ë├è├ï├î├ì├Ä├É├æ├Æ├ô├ö├ò├û├ù├ÿ├Ö├Ü├¢├£├¥├₧├á├í├ó├ú├ñ├Ñ├ª├º├¿├⌐├¬├½├¼├¡├»├░├▒├▓├┤├╡├╢├╖├║├╗├╜├╛┬á┬í┬ó┬¿┬⌐┬«┬»┬┐┬╕┬╖┬┤├ç├Å├ƒ├«├┐├╝├╣├╕├│ Γäó┼í`;

    const str = '\x21 \x22 \x23 \x24 \x25 \x26 \x27 \x28 \x29 \x2a \x2b \x2c \x2d \x2e \x2f \x30 \x31 \x32 \x33 \x34 \x35 \x36 \x37 \x38 \x39 \x3a \x3b \x3c \x3d \x3e \x3f \x40 \x41 \x42 \x43 \x44 \x45 \x46 \x47 \x48 \x49 \x4a \x4b \x4c \x4d \x4e \x4f \x50 \x51 \x52 \x53 \x54 \x55 \x56 \x57 \x58 \x59 \x5a \x5b \x5c \x5d \x5e \x5f \x60 \x61 \x62 \x63 \x64 \x65 \x66 \x67 \x68 \x69 \x6a \x6b \x6c \x6d \x6e \x6f \x70 \x71 \x72 \x73 \x74 \x75 \x76 \x77 \x78 \x79 \x7a \x7b \x7c \x7d \x7e \xce \x93 \xc3 \x87 \xc3 \xbf \xce \x93 \xc3 \x87 \xc3 \x96 \xce \x93 \xc3 \x87 \xc2 \xa3 \xce \x93 \xc3 \x87 \xc2 \xa5 \xce \x93 \xc3 \x87 \xc3 \xb4 \xce \x93 \xc3 \x87 \xc3 \xb6 \xe2 \x94 \xac \xc3 \xba \xe2 \x94 \xac \xc3 \xb1 \xe2 \x94 \xac \xc3 \x91 \xe2 \x94 \xac \xc2 \xaa \xe2 \x94 \xac \xc2 \xba \xe2 \x94 \xac \xc2 \xac \xe2 \x94 \xac \xc2 \xbd \xe2 \x94 \xac \xc2 \xbc \xe2 \x94 \xac \xc2 \xa1 \xe2 \x94 \xac \xe2 \x96 \x91 \xe2 \x94 \xac \xe2 \x96 \x92 \xe2 \x94 \xac \xe2 \x96 \x93 \xe2 \x94 \xac \xe2 \x94 \x82 \xe2 \x94 \xac \xe2 \x95 \xa1 \xe2 \x94 \xac \xe2 \x95 \xa2 \xe2 \x94 \xac \xe2 \x95 \xa3 \xe2 \x94 \xac \xe2 \x95 \x91 \xe2 \x94 \xac \xe2 \x95 \x97 \xe2 \x94 \xac \xe2 \x95 \x9d \xe2 \x94 \xac \xe2 \x95 \x9c \xe2 \x94 \xac \xe2 \x95 \x9b \xe2 \x94 \x9c \xc3 \x87 \xe2 \x94 \x9c \xc3 \xbc \xe2 \x94 \x9c \xc3 \xa9 \xe2 \x94 \x9c \xc3 \xa2 \xe2 \x94 \x9c \xc3 \xa4 \xe2 \x94 \x9c \xc3 \xa0 \xe2 \x94 \x9c \xc3 \xa5 \xe2 \x94 \x9c \xc3 \xaa \xe2 \x94 \x9c \xc3 \xab \xe2 \x94 \x9c \xc3 \xa8 \xe2 \x94 \x9c \xc3 \xaf \xe2 \x94 \x9c \xc3 \xae \xe2 \x94 \x9c \xc3 \xac \xe2 \x94 \x9c \xc3 \x84 \xe2 \x94 \x9c \xc3 \x89 \xe2 \x94 \x9c \xc3 \xa6 \xe2 \x94 \x9c \xc3 \x86 \xe2 \x94 \x9c \xc3 \xb4 \xe2 \x94 \x9c \xc3 \xb6 \xe2 \x94 \x9c \xc3 \xb2 \xe2 \x94 \x9c \xc3 \xbb \xe2 \x94 \x9c \xc3 \xb9 \xe2 \x94 \x9c \xc3 \xbf \xe2 \x94 \x9c \xc3 \x96 \xe2 \x94 \x9c \xc3 \x9c \xe2 \x94 \x9c \xc2 \xa2 \xe2 \x94 \x9c \xc2 \xa3 \xe2 \x94 \x9c \xc2 \xa5 \xe2 \x94 \x9c \xe2 \x82 \xa7 \xe2 \x94 \x9c \xc3 \xa1 \xe2 \x94 \x9c \xc3 \xad \xe2 \x94 \x9c \xc3 \xb3 \xe2 \x94 \x9c \xc3 \xba \xe2 \x94 \x9c \xc3 \xb1 \xe2 \x94 \x9c \xc3 \x91 \xe2 \x94 \x9c \xc2 \xaa \xe2 \x94 \x9c \xc2 \xba \xe2 \x94 \x9c \xc2 \xbf \xe2 \x94 \x9c \xe2 \x8c \x90 \xe2 \x94 \x9c \xc2 \xac \xe2 \x94 \x9c \xc2 \xbd \xe2 \x94 \x9c \xc2 \xbc \xe2 \x94 \x9c \xc2 \xa1 \xe2 \x94 \x9c \xc2 \xbb \xe2 \x94 \x9c \xe2 \x96 \x91 \xe2 \x94 \x9c \xe2 \x96 \x92 \xe2 \x94 \x9c \xe2 \x96 \x93 \xe2 \x94 \x9c \xe2 \x94 \xa4 \xe2 \x94 \x9c \xe2 \x95 \xa1 \xe2 \x94 \x9c \xe2 \x95 \xa2 \xe2 \x94 \x9c \xe2 \x95 \x96 \xe2 \x94 \x9c \xe2 \x95 \x91 \xe2 \x94 \x9c \xe2 \x95 \x97 \xe2 \x94 \x9c \xe2 \x95 \x9c \xe2 \x94 \x9c \xe2 \x95 \x9b \xe2 \x94 \xac \xc3 \xa1 \xe2 \x94 \xac \xc3 \xad \xe2 \x94 \xac \xc3 \xb3 \xe2 \x94 \xac \xc2 \xbf \xe2 \x94 \xac \xe2 \x8c \x90 \xe2 \x94 \xac \xc2 \xab \xe2 \x94 \xac \xc2 \xbb \xe2 \x94 \xac \xe2 \x94 \x90 \xe2 \x94 \xac \xe2 \x95 \x95 \xe2 \x94 \xac \xe2 \x95 \x96 \xe2 \x94 \xac \xe2 \x94 \xa4 \xe2 \x94 \x9c \xc3 \xa7 \xe2 \x94 \x9c \xc3 \x85 \xe2 \x94 \x9c \xc6 \x92 \xe2 \x94 \x9c \xc2 \xab \xe2 \x94 \x9c \xe2 \x94 \x90 \xe2 \x94 \x9c \xe2 \x95 \x9d \xe2 \x94 \x9c \xe2 \x95 \xa3 \xe2 \x94 \x9c \xe2 \x95 \x95 \xe2 \x94 \x9c \xe2 \x94 \x82 \x20 \xce \x93 \xc3 \xa4 \xc3 \xb3 \xe2 \x94 \xbc \xc3 \xad \x0a';
    let arr = str.split(' ').map(c => c.charCodeAt(0).toString().normalize());
    let set = Array.from(new Set(arr))
    console.log("length:", arr.length)
    console.log(set);
    console.log("length:", set.length)

    const str2 = `!"#\$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~ΓÇÿΓÇÖΓÇ£ΓÇ¥ΓÇôΓÇö┬ú┬ñ┬Ñ┬ª┬º┬¬┬½┬¼┬¡┬░┬▒┬▓┬│┬╡┬╢┬╣┬║┬╗┬╝┬╜┬╛├Ç├ü├é├â├ä├à├å├ê├ë├è├ï├î├ì├Ä├É├æ├Æ├ô├ö├ò├û├ù├ÿ├Ö├Ü├¢├£├¥├₧├á├í├ó├ú├ñ├Ñ├ª├º├¿├⌐├¬├½├¼├¡├»├░├▒├▓├┤├╡├╢├╖├║├╗├╜├╛┬á┬í┬ó┬¿┬⌐┬«┬»┬┐┬╕┬╖┬┤├ç├Å├ƒ├«├┐├╝├╣├╕├│ Γäó┼í`
    const arr2 = str.split('').map(c => c.charCodeAt(0));
    const set2 = Array.from(new Set(arr2))
    console.log("length:", arr2.length)
    console.log(set2);
    console.log("length:", set2.length)

    console.log("Back Conversion:", set2.map(n => String.fromCharCode(n)))

    return (
        <div className="notes large-notes">
            {chars.split('').map((c, i) => {
                return <p>{`${i}. ${c}`}</p>
            })}
        </div>
    )
}